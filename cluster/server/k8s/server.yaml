apiVersion: v1
kind: ServiceAccount
metadata:
  name: blueno-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: blueno-server
rules:
  - verbs:
      - create
    resources:
      - jobs
    apiGroups:
      - batch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: blueno-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: blueno-server
subjects:
  - kind: ServiceAccount
    name: blueno-server
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: blueno-server
spec:
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: blueno-server
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blueno-server
spec:
  selector:
    matchLabels:
      app: blueno-server
  template:
    metadata:
      labels:
        app: blueno-server
    spec:
      serviceAccountName: blueno-server
      initContainers:
        - name: wait-for-task-queue
          image: redis:5.0
          command:
            - "sh"
            - "-c"
            - "until timeout 5 redis-cli -h blueno-task-queue ping; do echo waiting for redis task queue; done;"
        - name: init-db
          # Keep the version tag in-sync with Makefile and the other k8s config files
          image: cyclotomic/blueno-server
          imagePullPolicy: Always
          command:
            - "python"
          args:
            - "cli.py"
            - "init_db"
          envFrom:
            - secretRef:
                name: blueno-db
      containers:
        - name: blueno-server
          # Keep the image name in-sync with the k8s config files
          image: cyclotomic/blueno-server
          imagePullPolicy: Always
          # Keep env vars in-sync with the other k8s config files
          env:
            - name: REDIS_HOST
              value: blueno-task-queue
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/gcs/storage.json
            - name: FILESYSTEM_STORE_ROOT
              value: /var/lib/blueno-nfs
          envFrom:
            - secretRef:
                name: blueno-db
            - secretRef:
                name: blueno-server-jwt
            - secretRef:
                name: blueno-storage-azure
                optional: true
          resources:
            requests:
              cpu: 0m
              memory: 300Mi
            limits:
              cpu: 1
              memory: 500Mi
          volumeMounts:
            - mountPath: /etc/gcs
              name: gcs
            - mountPath: /var/lib/blueno-nfs
              name: nfs
      volumes:
        - name: gcs
          secret:
            secretName: blueno-storage-gcs
            optional: true
        - name: nfs
          persistentVolumeClaim:
            claimName: blueno-nfs
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: blueno-server
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blueno-server
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageValue: 500m
